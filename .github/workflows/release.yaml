jobs:
  package:
    name: package and upload release assets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: setup-go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
      - name: build
        run: |
          for os in linux darwin windows; do
            for arch in amd64 arm; do
              if [ $os == 'darwin' ] && [ $arch == 'arm' ]; then
              else
                GOOS=$os; GOARCH=$arch; go build -o nebula-console-$os-$arch
              fi
            done
          done
          tar -cvzf nebula-console.tar.gz nebula-console-*
      - name: vars
        id: vars
        env:
          SHA_EXT: sha256sum.txt
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          filename=nebula-console.tar.gz
          sha256sum $filename > $filename.$SHA_EXT
          echo "::set-output name=tag::$tag"
          echo "::set-output name=filepath::$filename"
          echo "::set-output name=shafilepath::$filename.$SHA_EXT"
        shell: bash
      - name: upload release asset
        run: |
          ./ci/scripts/upload-github-release-asset.sh github_token=${{ secrets.GITHUB_TOKEN }} repo=${{ github.repository }} tag=${{ steps.vars.outputs.tag }} filepath=${{ steps.vars.outputs.filepath }}
          ./ci/scripts/upload-github-release-asset.sh github_token=${{ secrets.GITHUB_TOKEN }} repo=${{ github.repository }} tag=${{ steps.vars.outputs.tag }} filepath=${{ steps.vars.outputs.shafilepath }}
          ./ci/scripts/upload-oss.sh OSS_ENDPOINT=${{ secrets.OSS_ENDPOINT }} OSS_ID=${{ secrets.OSS_ID }} OSS_SECRET=${{ secrets.OSS_SECRET }} tag=${{ steps.vars.outputs.tag }} filepath=${{ steps.vars.outputs.filepath }}
          ./ci/scripts/upload-oss.sh OSS_ENDPOINT=${{ secrets.OSS_ENDPOINT }} OSS_ID=${{ secrets.OSS_ID }} OSS_SECRET=${{ secrets.OSS_SECRET }} tag=${{ steps.vars.outputs.tag }} filepath=${{ steps.vars.outputs.shafilepath }}
        shell: bash

  docker:
    name: build docker images
    runs-on: ubuntu-latest
    steps:
      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: build release image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/nebula-console
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          docker build -t ${IMAGE_NAME}:${tag} .
          docker tag ${IMAGE_NAME}:${tag} ${IMAGE_NAME}:latest
          docker push ${IMAGE_NAME}:${tag}
          docker push ${IMAGE_NAME}:latest
        shell: bash
